{
  "openapi": "3.0.4",
  "info": {
    "title": "LLM OpenAPI",
    "description": "Спецификация только для LLM/OpenAI интеграции",
    "version": "LLM"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/llm/schema": {
      "get": {
        "summary": "Получить схему/метаданные API и моделей, чтобы LLM знала доступные поля и порядок вызовов.",
        "description": "Возвращает список эндпоинтов, параметры, а также известные поля моделей (и набор полей, допустимых в параметре fields).",
        "operationId": "GetSchema",
        "parameters": [
          {
            "name": "part",
            "in": "query",
            "description": "Номер части ответа (начиная с 1). Если ответ превышает лимит токенов, контент будет возвращён по частям.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkedResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/llm/products": {
      "get": {
        "summary": "Получить список товаров (объекты Ozon API)",
        "description": "Возвращает объекты списка товаров из Ozon API",
        "operationId": "LLM_Products",
        "parameters": [
          {
            "name": "offerIds",
            "in": "query",
            "description": "Фильтр по offer_id (необязательно)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "productIds",
            "in": "query",
            "description": "Фильтр по product_id (необязательно)",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "skus",
            "in": "query",
            "description": "Фильтр по sku (необязательно)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lastId",
            "in": "query",
            "description": "Пагинация: last_id (необязательно)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Пагинация: limit (по умолчанию 1000)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Необязательный список полей, которые нужно включить в ответ. Если не задан — вернётся полный объект.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "part",
            "in": "query",
            "description": "Номер части ответа (начиная с 1). Если ответ превышает лимит токенов, контент будет возвращён по частям.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkedResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/llm/products/info": {
      "post": {
        "summary": "Получить список товаров (POST) — принимает тело запроса, совместимое с Ozon API",
        "description": "Принимает ProductInfoListRequest и возвращает объекты Ozon API",
        "operationId": "LLM_ProductsInfo",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Необязательный список полей, которые нужно включить в ответ. Если не задан — вернётся полный объект.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "part",
            "in": "query",
            "description": "Номер части ответа (начиная с 1). Если ответ превышает лимит токенов, контент будет возвращён по частям.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "requestBody": {
          "description": "Объект запроса, содержащий фильтры для получения списка товаров",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInfoListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkedResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/llm/product/description": {
      "post": {
        "summary": "Получить описание товара по SKU",
        "description": "Возвращает текстовое описание товара из Ozon API",
        "operationId": "LLM_ProductDescription",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Необязательный список полей, включаемых в ответ (например: sku, description). Если не задан — вернётся полный объект.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "part",
            "in": "query",
            "description": "Номер части ответа (начиная с 1). Если ответ превышает лимит токенов, контент будет возвращён по частям.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "requestBody": {
          "description": "Объект запроса, содержащий SKU товара",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDescriptionRequestDto"
              },
              "example": {"sku":"2000000015156"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkedResponseDto"
                },
                "example": {"sku":"2000000015156","description":"Трёхколодочное сцепление для скутеров Honda Dio...","offer_id":"2000000015156","name":"Плата сцепления TWH тюнинг на скутер Honda Dio..."}
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/llm/length-check": {
      "post": {
        "summary": "Генерирует строку указанной длины, содержащую случайные русские символы.",
        "description": "Метод возвращает текст, состоящий из случайных русских символов, длиной, указанной в теле запроса.",
        "operationId": "LengthCheck",
        "parameters": [
          {
            "name": "part",
            "in": "query",
            "description": "Часть ответа, если требуется разбить результат на части.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "requestBody": {
          "description": "Объект запроса, содержащий длину строки.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LengthRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkedResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Недопустимая длина (меньше 1 или больше 100 000 000)"
          }
        }
      }
    },
    "/llm/ratings": {
      "post": {
        "summary": "Получить рейтинг контента по набору SKU (детально)",
        "description": "Возвращает детальный рейтинг для нескольких SKU",
        "operationId": "LLM_RatingBySkus",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Необязательный список полей, включаемых в ответ (например: result.sku,result.rating). Если не задан — вернётся полный объект.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "part",
            "in": "query",
            "description": "Номер части ответа (начиная с 1). Если ответ превышает лимит токенов, контент будет возвращён по частям.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "requestBody": {
          "description": "Объект запроса, содержащий список SKU",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkedResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/llm/products/short-info": {
      "get": {
        "summary": "Получить краткую информацию о всех товарах: SKU, имя, product_id, описание категории, рейтинг.",
        "description": "Метод всегда возвращает полную структуру без параметров.",
        "operationId": "GetShortInfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkedResponseDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChunkedResponseDto": {
        "type": "object",
        "properties": {
          "is_consequential": {
            "type": "boolean",
            "description": "Признак, что ответ разбит на последовательные части."
          },
          "content": {
            "type": "string",
            "description": "Текстовая часть контента (JSON-строка или просто текст).",
            "nullable": true
          },
          "part": {
            "type": "integer",
            "description": "Номер части (начиная с 1).",
            "format": "int32"
          },
          "total_parts": {
            "type": "integer",
            "description": "Общее количество частей.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Обёртка для больших ответов: либо полный контент, либо часть контента."
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "IsSuccess": {
            "type": "boolean",
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true
          },
          "Extra": {
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Стандартная модель структурированного ответа об ошибке."
      },
      "ErrorResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO: Стандартный формат ошибки API"
      },
      "LengthRequestDto": {
        "type": "object",
        "properties": {
          "length": {
            "type": "integer",
            "description": "Length of the string to generate",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request body for length-check endpoint"
      },
      "ProductDescriptionRequestDto": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "description": "SKU товара (строка, обязательна)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO: Запрос получения описания товара по SKU"
      },
      "ProductInfoListRequest": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RatingRequest": {
        "type": "object",
        "properties": {
          "skus": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tags": [
    {
      "name": "LLMOpenAPI",
      "description": "LLM OpenAPI - endpoints for optimizing Ozon product content"
    },
    {
      "name": "LLMOpenAPI",
      "description": "Контроллер для операций с LLM/OpenAI и интеграции с Ozon API.\r\nСодержит методы для оптимизации контента карточек товаров и отдельной оптимизации по SKU."
    }
  ]
}